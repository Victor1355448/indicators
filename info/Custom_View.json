{
  "title": "Custom View",
  "content": "\n            <h2><strong>Description</strong></h2><p>The <strong>Custom View</strong> indicator is a demonstration tool designed to showcase custom property displays in the ATAS interface. It does not perform any calculations or affect market data. Its primary purpose is to illustrate how custom views (UI) can be used for indicator configuration through XAML.</p><hr><h2><img src=\"https://s3.amazonaws.com/cdn.freshdesk.com/data/helpdesk/attachments/production/72134392778/original/-8U6qQ_nc1JV5MPwrMmK2_H_Qzlg7_qQ0w.png?1738236610\"></h2><h2><strong>How It Works</strong></h2><p>Unlike standard ATAS indicators, the <strong>Custom View</strong> indicator defines its properties and their appearance using a separate XAML file. This file is responsible for rendering a custom property editor that is loaded into the ATAS indicator settings panel.</p><h3><strong>Key Features:</strong></h3><ul><li><strong>Property editor is created in XAML</strong> instead of being defined in C# code.</li><li><strong>Fully customizable UI</strong>, allowing modifications to property displays.</li><li><strong>Useful for creating indicators with unique settings</strong>, beyond the default UI elements.</li></ul><hr><h2><strong>Available Properties</strong></h2><h3><strong>1. Custom Properties</strong></h3><ul><li><strong>String</strong> – Input field for text values.</li><li><strong>Number</strong> – Input field for numeric values.</li></ul><h3><strong>2. Drawing (Display Settings)</strong></h3><ul><li><strong>Panel</strong> – Determines where the indicator is drawn (<code>Chart</code>, <code>Subwindow</code>).</li><li><strong>Visual Mode</strong> – Defines the rendering mode (<code>Line</code>, <code>Bar</code>, <code>Area</code>, etc.).</li><li><strong>Line Style</strong> – Specifies the line type (<code>Solid</code>, <code>Dashed</code>, <code>Dotted</code>, etc.).</li><li><strong>Width</strong> – Sets the line thickness.</li><li><strong>Color</strong> – Selects the line color.</li><li><strong>Text Color</strong> – Configures the text color.</li></ul><h3><strong>3. Additional Settings</strong></h3><ul><li><strong>Show Value</strong> – Displays the value on the chart.</li><li><strong>Draw Above Price</strong> – Renders the indicator above the price.</li><li><strong>Show Zero Values on Axis</strong> – Displays zero values on the axis.</li><li><strong>Scale</strong> – Enables/disables scaling.</li><li><strong>Ignored by Alerts</strong> – Prevents the indicator from being used in alerts.</li></ul><hr><h2><strong>Source Code</strong></h2><p>The source code for the <strong>Custom View</strong> indicator, including the XAML file for the custom UI editor, is available in the <strong>Technical</strong> repository on GitHub.</p><p><br></p><p><strong>Link to the latest branch:</strong><br><a href=\"https://github.com/AtasPlatform/Indicators/tree/publish_latest\">Go to Technical repository (latest)</a></p><hr><h2><strong>Conclusion</strong></h2><p>The <strong>Custom View</strong> indicator demonstrates the customization capabilities of the ATAS UI. It is useful for developers looking to create custom indicators with unique property editors. Using XAML for UI management allows for flexible customization, making it an excellent approach for extending ATAS functionality.</p><p>If you are developing your own indicators and want to incorporate custom UI elements in the editor, studying the <strong>Technical</strong> repository code can serve as a great example.</p>\n            \n\n          ",
  "url": "https://help.atas.net/en/support/solutions/articles/72000639655-custom-view",
  "scrapedAt": "2025-10-20T23:10:11.738Z"
}